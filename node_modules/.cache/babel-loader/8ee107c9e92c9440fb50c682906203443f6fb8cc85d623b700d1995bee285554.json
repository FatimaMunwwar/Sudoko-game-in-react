{"ast":null,"code":"var _jsxFileName = \"/Users/htc/Desktop/react_project/sudoku/src/components/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { col_1_ids, col_2_ids, col_3_ids, col_4_ids, col_5_ids, col_6_ids, col_7_ids, col_8_ids, col_9_ids } from \"../constants/cols\";\nimport { row_1_ids, row_2_ids, row_3_ids, row_4_ids, row_5_ids, row_6_ids, row_7_ids, row_8_ids, row_9_ids } from \"../constants/rows\";\nimport { pattern_1 } from \"../constants/patterns\";\n\n// all filled cells\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet filledIds = [];\n// wrongValue\nlet wrongVal = [];\n// all input Ids\nlet inputId;\nconst Sudoku = () => {\n  _s();\n  const [idsLength, setIdsLength] = useState([]);\n  useEffect(() => {\n    const containerId = document.getElementById(\"container\");\n    const btnId = document.getElementById(\"btns\");\n    if (containerId) {\n      containerId.innerHTML = \"\";\n      console.log('helo');\n    }\n    if (btnId) {\n      btnId.innerHTML = \"\";\n    }\n    createGameBox();\n  }, []);\n\n  // creating dynamically cells\n  const createGameBox = () => {\n    const containerId = document.getElementById(\"container\");\n    const btnId = document.getElementById(\"btns\");\n    let inputId = 0;\n    let btnNumber = 0;\n    for (let i = 0; i < 3; i++) {\n      const divRowElement = document.createElement(\"div\");\n      divRowElement.className = \"div-row\";\n      if (i === 2) {\n        divRowElement.style.borderRight = \"2px solid black\";\n      }\n      containerId.appendChild(divRowElement);\n      for (let j = 0; j < 9; j++) {\n        const divColElement = document.createElement(\"div\");\n        divColElement.classList.add(\"col-4\");\n        if ((j + 1) % 2 !== 0) {\n          divColElement.classList.add(`border-${j}`);\n        }\n        divRowElement.appendChild(divColElement);\n        for (let j = 0; j < 3; j++) {\n          inputId += 1;\n          const inputElement = document.createElement(\"input\");\n          inputElement.className = \"input-style\";\n          inputElement.maxLength = 1;\n          inputElement.type = \"number\";\n          inputElement.setAttribute(\"id\", `${inputId}`);\n          divColElement.appendChild(inputElement);\n        }\n      }\n    }\n    for (let i = 0; i < 1; i++) {\n      const divRowElement = document.createElement(\"div\");\n      divRowElement.classList.add(\"row\");\n      divRowElement.classList.add(\"btn-row\");\n      btnId.appendChild(divRowElement);\n      for (let j = 0; j < 3; j++) {\n        const divColElement = document.createElement(\"div\");\n        divColElement.classList.add(\"col-12\");\n        divRowElement.appendChild(divColElement);\n        for (let k = 0; k < 3; k++) {\n          btnNumber += 1;\n          const buttonElement = document.createElement(\"button\");\n          buttonElement.value = String(btnNumber);\n          buttonElement.innerHTML = String(btnNumber);\n          divColElement.appendChild(buttonElement);\n        }\n      }\n    }\n  };\n  const removeDuplicates = arr => {\n    let newArr = [];\n    arr.forEach(element => {\n      if (!newArr.includes(element)) {\n        newArr.push(element);\n      }\n    });\n    return newArr;\n  };\n\n  // added colors according to active cell\n  const setColor = (id, color) => {\n    const values = removeDuplicates(wrongVal);\n    const eleId = document.getElementById(`${id}`);\n    if (!values.includes(String(id))) {\n      if (color === \"completed\") {\n        eleId.style.backgroundColor = \"#C0C0C0\";\n        eleId.style.color = \"#000\";\n      } else if (color === \"mercuryCol\") {\n        eleId.setAttribute(\"color\", \"mercuryCol\");\n        eleId.style.backgroundColor = \"#5f6368\";\n        eleId.style.color = \"#e8eaed\";\n      } else if (color === \"mercuryRow\") {\n        eleId.setAttribute(\"color\", \"mercuryRow\");\n        eleId.style.backgroundColor = \"#5f6368\";\n        eleId.style.color = \"#e8eaed\";\n      } else {\n        return null;\n      }\n    }\n  };\n\n  // highlight cells for other columns and rows\n  const highLightArea = id => {\n    let countFirstColHighlighted = id;\n    let countSecondColHighlighted = id;\n    let countFirstRowHighlighted = id;\n    let countSecondRowHighlighted = id;\n    for (let index = 0; index < 9; index++) {\n      if (!col_1_ids.includes(countFirstColHighlighted)) {\n        countFirstColHighlighted = countFirstColHighlighted - 3;\n        setColor(String(countFirstColHighlighted), \"mercuryCol\");\n      }\n      if (!row_1_ids.includes(countFirstRowHighlighted)) {\n        if (id <= 27 || countFirstRowHighlighted <= 27) {\n          countFirstRowHighlighted = countFirstRowHighlighted - 1;\n        } else if (id <= 52 || countFirstRowHighlighted <= 52) {\n          if (row_4_ids.includes(countFirstRowHighlighted)) {\n            countFirstRowHighlighted = countFirstRowHighlighted - 25;\n          } else {\n            countFirstRowHighlighted = countFirstRowHighlighted - 1;\n          }\n        } else {\n          if (row_7_ids.includes(countFirstRowHighlighted)) {\n            countFirstRowHighlighted = countFirstRowHighlighted - 25;\n          } else {\n            countFirstRowHighlighted = countFirstRowHighlighted - 1;\n          }\n        }\n        setColor(String(countFirstRowHighlighted), \"mercuryRow\");\n      }\n      if (!col_9_ids.includes(countSecondColHighlighted)) {\n        countSecondColHighlighted = countSecondColHighlighted + 3;\n        setColor(String(countSecondColHighlighted), \"mercuryCol\");\n      }\n      if (!row_9_ids.includes(countSecondRowHighlighted)) {\n        if (countSecondRowHighlighted % 3 === 0) {\n          countSecondRowHighlighted = countSecondRowHighlighted + 25;\n        } else {\n          countSecondRowHighlighted = countSecondRowHighlighted + 1;\n        }\n        setColor(String(countSecondRowHighlighted), \"mercuryRow\");\n      }\n    }\n  };\n\n  // active cells box\n  const activeCell = (first, last, id) => {\n    for (let index = first; index < last; index++) {\n      if (index + 1 !== id) {\n        setColor(`${index + 1}`, \"mercuryCol\");\n      }\n    }\n  };\n\n  // remove highlighted classes on changing\n  const removeHighLightCssClasses = () => {\n    const values = removeDuplicates(wrongVal);\n    for (let index = 1; index <= 81; index++) {\n      const eleId = document.getElementById(`${index}`);\n      if (filledIds.includes(String(index))) {\n        eleId.style.backgroundColor = \"#C0C0C0\";\n        eleId.style.color = \"#000\";\n      } else {\n        if (!values.includes(String(index))) {\n          eleId.style.color = \"\";\n          const filterData = values.filter(i => i !== String(index));\n          wrongVal = filterData;\n        }\n        eleId.setAttribute(\"color\", \"null\");\n        eleId.style.backgroundColor = \"\";\n      }\n    }\n  };\n  const onClick = id => {\n    removeHighLightCssClasses();\n    const eleId = document.getElementById(`${id}`);\n    eleId.setAttribute(\"color\", \"silverSolidBox\");\n    eleId.style.backgroundColor = \"#C0C0C0\";\n    highLightArea(id);\n    if (id >= 1 && id <= 9) {\n      activeCell(0, 9, id);\n    } else if (id >= 9 && id <= 18) {\n      activeCell(9, 18, id);\n    } else if (id >= 18 && id <= 27) {\n      activeCell(18, 27, id);\n    } else if (id >= 27 && id <= 36) {\n      activeCell(27, 36, id);\n    } else if (id >= 36 && id <= 45) {\n      activeCell(36, 45, id);\n    } else if (id >= 45 && id <= 54) {\n      activeCell(45, 54, id);\n    } else if (id >= 54 && id <= 63) {\n      activeCell(54, 63, id);\n    } else if (id >= 63 && id <= 72) {\n      activeCell(63, 72, id);\n    } else if (id >= 72 && id <= 81) {\n      activeCell(72, 81, id);\n    } else {\n      return;\n    }\n  };\n  const countIds = () => {\n    let count = [];\n    filledIds.forEach(element => {\n      if (!count.includes(element)) {\n        count.push(element);\n      }\n    });\n    setIdsLength(count);\n  };\n  const checkValue = event => {\n    const values = removeDuplicates(wrongVal);\n    const elementId = document.getElementById(`${event.target.id}`);\n    if (event.target.id) {\n      if (elementId.value.length) {\n        elementId.value = elementId.value[0];\n        for (let index = 0; index < pattern_1.length; index++) {\n          const col_1 = pattern_1[index].col_1;\n          if (col_1) {\n            for (let j = 0; j < col_1.length; j++) {\n              if (col_1[j].id === Number(event.target.id)) {\n                if (col_1[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(i => i !== String(col_1[j].id));\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n          const col_2 = pattern_1[index].col_2;\n          if (col_2) {\n            for (let j = 0; j < col_2.length; j++) {\n              if (col_2[j].id === Number(event.target.id)) {\n                if (col_2[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(i => i !== String(col_2[j].id));\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n          const col_3 = pattern_1[index].col_3;\n          if (col_3) {\n            for (let j = 0; j < col_3.length; j++) {\n              if (col_3[j].id === Number(event.target.id)) {\n                if (col_3[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(i => i !== String(col_3[j].id));\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n          const col_4 = pattern_1[index].col_4;\n          if (col_4) {\n            for (let j = 0; j < col_4.length; j++) {\n              if (col_4[j].id === Number(event.target.id)) {\n                if (col_4[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(i => i !== String(col_4[j].id));\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n          const col_5 = pattern_1[index].col_5;\n          if (col_5) {\n            for (let j = 0; j < col_5.length; j++) {\n              if (col_5[j].id === Number(event.target.id)) {\n                if (col_5[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(i => i !== String(col_5[j].id));\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n          const col_6 = pattern_1[index].col_6;\n          if (col_6) {\n            for (let j = 0; j < col_6.length; j++) {\n              if (col_6[j].id === Number(event.target.id)) {\n                if (col_6[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(i => i !== String(col_6[j].id));\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n          const col_7 = pattern_1[index].col_7;\n          if (col_7) {\n            for (let j = 0; j < col_7.length; j++) {\n              if (col_7[j].id === Number(event.target.id)) {\n                if (col_7[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(i => i !== String(col_7[j].id));\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n          const col_8 = pattern_1[index].col_8;\n          if (col_8) {\n            for (let j = 0; j < col_8.length; j++) {\n              if (col_8[j].id === Number(event.target.id)) {\n                if (col_8[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(i => i !== String(col_8[j].id));\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n          const col_9 = pattern_1[index].col_9;\n          if (col_9) {\n            for (let j = 0; j < col_9.length; j++) {\n              if (col_9[j].id === Number(event.target.id)) {\n                if (col_9[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(i => i !== String(col_9[j].id));\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  // collecting random objects for showing on UI\n  let randomObj = [];\n  const clearAllValues = () => {\n    for (let index = 1; index <= 81; index++) {\n      const element = document.getElementById(`${index}`);\n      element.value = \"\";\n      element.style.color = \"\";\n    }\n    filledIds = [];\n    newGame();\n    setIdsLength([]);\n    wrongVal = [];\n  };\n  const addRandomItems = item => {\n    if (randomObj.length <= 25) {\n      if (!randomObj.includes(item)) {\n        randomObj.push(item);\n      }\n    }\n  };\n  const newGame = () => {\n    randomObj = [];\n    for (let index = 0; index < 6; index++) {\n      if (pattern_1[0].col_1) {\n        const item = pattern_1[0].col_1[Math.floor(Math.random() * pattern_1[0].col_1.length)];\n        addRandomItems(item);\n      }\n      if (pattern_1[1].col_2) {\n        const item = pattern_1[1].col_2[Math.floor(Math.random() * pattern_1[1].col_2.length)];\n        addRandomItems(item);\n      }\n      if (pattern_1[2].col_3) {\n        const item = pattern_1[2].col_3[Math.floor(Math.random() * pattern_1[2].col_3.length)];\n        addRandomItems(item);\n      }\n      if (pattern_1[3].col_4) {\n        const item = pattern_1[3].col_4[Math.floor(Math.random() * pattern_1[3].col_4.length)];\n        addRandomItems(item);\n      }\n      if (pattern_1[4].col_5) {\n        const item = pattern_1[4].col_5[Math.floor(Math.random() * pattern_1[4].col_5.length)];\n        addRandomItems(item);\n      }\n      if (pattern_1[5].col_6) {\n        const item = pattern_1[5].col_6[Math.floor(Math.random() * pattern_1[5].col_6.length)];\n        addRandomItems(item);\n      }\n      if (pattern_1[6].col_7) {\n        const item = pattern_1[6].col_7[Math.floor(Math.random() * pattern_1[6].col_7.length)];\n        addRandomItems(item);\n      }\n      if (pattern_1[7].col_8) {\n        const item = pattern_1[7].col_8[Math.floor(Math.random() * pattern_1[7].col_8.length)];\n        addRandomItems(item);\n      }\n      if (pattern_1[8].col_7) {\n        const item = pattern_1[8].col_7[Math.floor(Math.random() * pattern_1[8].col_7.length)];\n        addRandomItems(item);\n      }\n    }\n    for (let index = 0; index < randomObj.length; index++) {\n      const elementId = document.getElementById(`${randomObj[index].id}`);\n      elementId.value = randomObj[index].val;\n      if (index === 0) {\n        onClick(Number(randomObj[index].id));\n      }\n    }\n  };\n  useEffect(() => {\n    clearAllValues();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    // eslint-disable-next-line no-restricted-globals\n    addEventListener(\"keydown\", function (e) {\n      if ([\"Space\", \"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.code) > -1) {\n        e.preventDefault();\n        return;\n      }\n    }, false);\n    // eslint-disable-next-line no-restricted-globals\n    addEventListener(\"input\", event => {\n      checkValue(event);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    // eslint-disable-next-line no-restricted-globals\n    addEventListener(\"click\", event => {\n      if (event.target.id) {\n        if (!isNaN(event.target.id)) {\n          onClick(Number(event.target.id));\n          inputId = event.target.id;\n        }\n      } else if (event.target.localName === \"button\") {\n        const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n        if (numbers.includes(Number(event.target.value))) {\n          let e = {\n            ...event,\n            target: {\n              id: inputId\n            },\n            value: event.target.value\n          };\n          const elementId = document.getElementById(`${inputId}`);\n          if (inputId) {\n            elementId.value = event.target.value;\n          }\n          inputId = \"\";\n          checkValue(e);\n        }\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const filledCells = (start, end) => {\n    let count = [];\n    for (let index = start; index <= end; index++) {\n      const element = document.getElementById(`${index}`);\n      if (element !== null && element !== void 0 && element.value) {\n        count.push(element.id);\n      }\n    }\n    if (count.length === 9) {\n      for (let index = 0; index < count.length; index++) {\n        if (!filledIds.includes(count[index])) {\n          setColor(count[index], \"completed\");\n          filledIds.push(count[index]);\n        }\n      }\n    }\n  };\n  const filledRowsAndCols = row => {\n    let count = [];\n    for (let index = 0; index < 9; index++) {\n      const element = document.getElementById(`${row[index]}`);\n      if (element !== null && element !== void 0 && element.value) {\n        count.push(element.id);\n      }\n    }\n    if (count.length === 9) {\n      for (let index = 0; index < count.length; index++) {\n        if (!filledIds.includes(count[index])) {\n          setColor(count[index], \"completed\");\n          filledIds.push(count[index]);\n        }\n      }\n    }\n  };\n  const checkCompletedCells = () => {\n    filledCells(1, 9);\n    filledCells(9, 18);\n    filledCells(19, 27);\n    filledCells(28, 36);\n    filledCells(37, 45);\n    filledCells(46, 54);\n    filledCells(55, 63);\n    filledCells(64, 72);\n    filledCells(73, 81);\n    filledRowsAndCols(row_1_ids);\n    filledRowsAndCols(row_2_ids);\n    filledRowsAndCols(row_3_ids);\n    filledRowsAndCols(row_4_ids);\n    filledRowsAndCols(row_5_ids);\n    filledRowsAndCols(row_6_ids);\n    filledRowsAndCols(row_7_ids);\n    filledRowsAndCols(row_8_ids);\n    filledRowsAndCols(row_9_ids);\n    filledRowsAndCols(col_1_ids);\n    filledRowsAndCols(col_2_ids);\n    filledRowsAndCols(col_3_ids);\n    filledRowsAndCols(col_4_ids);\n    filledRowsAndCols(col_5_ids);\n    filledRowsAndCols(col_6_ids);\n    filledRowsAndCols(col_7_ids);\n    filledRowsAndCols(col_8_ids);\n    filledRowsAndCols(col_9_ids);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"This game is like\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://sudoku.com\",\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: \"sudoku\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 11\n        }, this), \", you can read more about this game\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://sudoku.com\",\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: \"click here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main-container\",\n      children: idsLength.length === 91 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Congratulations, You have completed this game.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"none\"\n          },\n          id: \"btns\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new-game\",\n      onClick: clearAllValues,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 666,\n    columnNumber: 5\n  }, this);\n};\n_s(Sudoku, \"BO7QMBCvN19wJa4KeUXHqjQPh1o=\");\n_c = Sudoku;\nexport default Sudoku;\nvar _c;\n$RefreshReg$(_c, \"Sudoku\");","map":{"version":3,"names":["React","useEffect","useState","col_1_ids","col_2_ids","col_3_ids","col_4_ids","col_5_ids","col_6_ids","col_7_ids","col_8_ids","col_9_ids","row_1_ids","row_2_ids","row_3_ids","row_4_ids","row_5_ids","row_6_ids","row_7_ids","row_8_ids","row_9_ids","pattern_1","filledIds","wrongVal","inputId","Sudoku","idsLength","setIdsLength","containerId","document","getElementById","btnId","innerHTML","console","log","createGameBox","btnNumber","i","divRowElement","createElement","className","style","borderRight","appendChild","j","divColElement","classList","add","inputElement","maxLength","type","setAttribute","k","buttonElement","value","String","removeDuplicates","arr","newArr","forEach","element","includes","push","setColor","id","color","values","eleId","backgroundColor","highLightArea","countFirstColHighlighted","countSecondColHighlighted","countFirstRowHighlighted","countSecondRowHighlighted","index","activeCell","first","last","removeHighLightCssClasses","filterData","filter","onClick","countIds","count","checkValue","event","elementId","target","length","col_1","Number","val","checkCompletedCells","col_2","col_3","col_4","col_5","col_6","col_7","col_8","col_9","randomObj","clearAllValues","newGame","addRandomItems","item","Math","floor","random","addEventListener","e","indexOf","code","preventDefault","isNaN","localName","numbers","filledCells","start","end","filledRowsAndCols","row","display"],"sources":["/Users/htc/Desktop/react_project/sudoku/src/components/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  col_1_ids,\n  col_2_ids,\n  col_3_ids,\n  col_4_ids,\n  col_5_ids,\n  col_6_ids,\n  col_7_ids,\n  col_8_ids,\n  col_9_ids,\n} from \"../constants/cols\";\nimport {\n  row_1_ids,\n  row_2_ids,\n  row_3_ids,\n  row_4_ids,\n  row_5_ids,\n  row_6_ids,\n  row_7_ids,\n  row_8_ids,\n  row_9_ids,\n} from \"../constants/rows\";\nimport { pattern_1 } from \"../constants/patterns\";\n\n// all filled cells\nlet filledIds = [] as any[];\n// wrongValue\nlet wrongVal = [] as any[];\n// all input Ids\nlet inputId: string;\nconst Sudoku = () => {\n  const [idsLength, setIdsLength] = useState<any>([]);\n  useEffect(() => {\n    const containerId = document.getElementById(\"container\") as HTMLDivElement;\n    const btnId = document.getElementById(\"btns\") as HTMLButtonElement;\n    if (containerId) {\n      containerId.innerHTML = \"\";\n      console.log('helo')\n    }\n    if (btnId) {\n      btnId.innerHTML = \"\";\n    }\n    createGameBox();\n  }, []);\n\n  // creating dynamically cells\n  const createGameBox = () => {\n    const containerId = document.getElementById(\"container\") as HTMLDivElement;\n    const btnId = document.getElementById(\"btns\") as HTMLButtonElement;\n\n    let inputId = 0;\n    let btnNumber = 0;\n    for (let i = 0; i < 3; i++) {\n      const divRowElement = document.createElement(\"div\");\n      divRowElement.className = \"div-row\";\n      if (i === 2) {\n        divRowElement.style.borderRight = \"2px solid black\";\n      }\n      containerId.appendChild(divRowElement);\n      for (let j = 0; j < 9; j++) {\n        const divColElement = document.createElement(\"div\");\n        divColElement.classList.add(\"col-4\");\n        if ((j + 1) % 2 !== 0) {\n          divColElement.classList.add(`border-${j}`);\n        }\n        divRowElement.appendChild(divColElement);\n        for (let j = 0; j < 3; j++) {\n          inputId += 1;\n          const inputElement = document.createElement(\"input\");\n          inputElement.className = \"input-style\";\n          inputElement.maxLength = 1;\n          inputElement.type = \"number\";\n          inputElement.setAttribute(\"id\", `${inputId}`);\n          divColElement.appendChild(inputElement);\n        }\n      }\n    }\n\n    for (let i = 0; i < 1; i++) {\n      const divRowElement = document.createElement(\"div\");\n      divRowElement.classList.add(\"row\");\n      divRowElement.classList.add(\"btn-row\");\n      btnId.appendChild(divRowElement);\n      for (let j = 0; j < 3; j++) {\n        const divColElement = document.createElement(\"div\");\n        divColElement.classList.add(\"col-12\");\n        divRowElement.appendChild(divColElement);\n        for (let k = 0; k < 3; k++) {\n          btnNumber += 1;\n          const buttonElement = document.createElement(\"button\");\n          buttonElement.value = String(btnNumber);\n          buttonElement.innerHTML = String(btnNumber);\n          divColElement.appendChild(buttonElement);\n        }\n      }\n    }\n  };\n\n  const removeDuplicates = (arr: any) => {\n    let newArr = [] as any[];\n    arr.forEach((element: any) => {\n      if (!newArr.includes(element)) {\n        newArr.push(element);\n      }\n    });\n    return newArr;\n  };\n\n  // added colors according to active cell\n  const setColor = (id: string, color: string) => {\n    const values = removeDuplicates(wrongVal);\n    const eleId = document.getElementById(`${id}`) as HTMLInputElement;\n    if (!values.includes(String(id))) {\n      if (color === \"completed\") {\n        eleId.style.backgroundColor = \"#C0C0C0\";\n        eleId.style.color = \"#000\";\n      } else if (color === \"mercuryCol\") {\n        eleId.setAttribute(\"color\", \"mercuryCol\");\n        eleId.style.backgroundColor = \"#5f6368\";\n        eleId.style.color = \"#e8eaed\";\n      } else if (color === \"mercuryRow\") {\n        eleId.setAttribute(\"color\", \"mercuryRow\");\n        eleId.style.backgroundColor = \"#5f6368\";\n        eleId.style.color = \"#e8eaed\";\n      } else {\n        return null;\n      }\n    }\n  };\n\n  // highlight cells for other columns and rows\n  const highLightArea = (id: number) => {\n    let countFirstColHighlighted = id;\n    let countSecondColHighlighted = id;\n    let countFirstRowHighlighted = id;\n    let countSecondRowHighlighted = id;\n    for (let index = 0; index < 9; index++) {\n      if (!col_1_ids.includes(countFirstColHighlighted)) {\n        countFirstColHighlighted = countFirstColHighlighted - 3;\n        setColor(String(countFirstColHighlighted), \"mercuryCol\");\n      }\n      if (!row_1_ids.includes(countFirstRowHighlighted)) {\n        if (id <= 27 || countFirstRowHighlighted <= 27) {\n          countFirstRowHighlighted = countFirstRowHighlighted - 1;\n        } else if (id <= 52 || countFirstRowHighlighted <= 52) {\n          if (row_4_ids.includes(countFirstRowHighlighted)) {\n            countFirstRowHighlighted = countFirstRowHighlighted - 25;\n          } else {\n            countFirstRowHighlighted = countFirstRowHighlighted - 1;\n          }\n        } else {\n          if (row_7_ids.includes(countFirstRowHighlighted)) {\n            countFirstRowHighlighted = countFirstRowHighlighted - 25;\n          } else {\n            countFirstRowHighlighted = countFirstRowHighlighted - 1;\n          }\n        }\n        setColor(String(countFirstRowHighlighted), \"mercuryRow\");\n      }\n      if (!col_9_ids.includes(countSecondColHighlighted)) {\n        countSecondColHighlighted = countSecondColHighlighted + 3;\n        setColor(String(countSecondColHighlighted), \"mercuryCol\");\n      }\n      if (!row_9_ids.includes(countSecondRowHighlighted)) {\n        if (countSecondRowHighlighted % 3 === 0) {\n          countSecondRowHighlighted = countSecondRowHighlighted + 25;\n        } else {\n          countSecondRowHighlighted = countSecondRowHighlighted + 1;\n        }\n        setColor(String(countSecondRowHighlighted), \"mercuryRow\");\n      }\n    }\n  };\n\n  // active cells box\n  const activeCell = (first: number, last: number, id: number) => {\n    for (let index = first; index < last; index++) {\n      if (index + 1 !== id) {\n        setColor(`${index + 1}`, \"mercuryCol\");\n      }\n    }\n  };\n\n  // remove highlighted classes on changing\n  const removeHighLightCssClasses = () => {\n    const values = removeDuplicates(wrongVal);\n    for (let index = 1; index <= 81; index++) {\n      const eleId = document.getElementById(`${index}`) as HTMLInputElement;\n      if (filledIds.includes(String(index))) {\n        eleId.style.backgroundColor = \"#C0C0C0\";\n        eleId.style.color = \"#000\";\n      } else {\n        if (!values.includes(String(index))) {\n          eleId.style.color = \"\";\n          const filterData = values.filter((i) => i !== String(index));\n          wrongVal = filterData;\n        }\n        eleId.setAttribute(\"color\", \"null\");\n        eleId.style.backgroundColor = \"\";\n      }\n    }\n  };\n\n  const onClick = (id: number) => {\n    removeHighLightCssClasses();\n    const eleId = document.getElementById(`${id}`) as HTMLInputElement;\n    eleId.setAttribute(\"color\", \"silverSolidBox\");\n    eleId.style.backgroundColor = \"#C0C0C0\";\n    highLightArea(id);\n    if (id >= 1 && id <= 9) {\n      activeCell(0, 9, id);\n    } else if (id >= 9 && id <= 18) {\n      activeCell(9, 18, id);\n    } else if (id >= 18 && id <= 27) {\n      activeCell(18, 27, id);\n    } else if (id >= 27 && id <= 36) {\n      activeCell(27, 36, id);\n    } else if (id >= 36 && id <= 45) {\n      activeCell(36, 45, id);\n    } else if (id >= 45 && id <= 54) {\n      activeCell(45, 54, id);\n    } else if (id >= 54 && id <= 63) {\n      activeCell(54, 63, id);\n    } else if (id >= 63 && id <= 72) {\n      activeCell(63, 72, id);\n    } else if (id >= 72 && id <= 81) {\n      activeCell(72, 81, id);\n    } else {\n      return;\n    }\n  };\n\n  const countIds = () => {\n    let count = [] as any[];\n    filledIds.forEach((element: any) => {\n      if (!count.includes(element)) {\n        count.push(element);\n      }\n    });\n    setIdsLength(count);\n  };\n\n  const checkValue = (event: any) => {\n    const values = removeDuplicates(wrongVal);\n    const elementId = document.getElementById(\n      `${event.target.id}`\n    ) as HTMLInputElement;\n    if (event.target.id) {\n      if (elementId.value.length) {\n        elementId.value = elementId.value[0];\n        for (let index = 0; index < pattern_1.length; index++) {\n          const col_1 = pattern_1[index].col_1;\n          if (col_1) {\n            for (let j = 0; j < col_1.length; j++) {\n              if (col_1[j].id === Number(event.target.id)) {\n                if (col_1[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(\n                    (i) => i !== String(col_1[j].id)\n                  );\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n          const col_2 = pattern_1[index].col_2 as any;\n          if (col_2) {\n            for (let j = 0; j < col_2.length; j++) {\n              if (col_2[j].id === Number(event.target.id)) {\n                if (col_2[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(\n                    (i) => i !== String(col_2[j].id)\n                  );\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n          const col_3 = pattern_1[index].col_3 as any;\n          if (col_3) {\n            for (let j = 0; j < col_3.length; j++) {\n              if (col_3[j].id === Number(event.target.id)) {\n                if (col_3[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(\n                    (i) => i !== String(col_3[j].id)\n                  );\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n          const col_4 = pattern_1[index].col_4 as any;\n          if (col_4) {\n            for (let j = 0; j < col_4.length; j++) {\n              if (col_4[j].id === Number(event.target.id)) {\n                if (col_4[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(\n                    (i) => i !== String(col_4[j].id)\n                  );\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n          const col_5 = pattern_1[index].col_5 as any;\n          if (col_5) {\n            for (let j = 0; j < col_5.length; j++) {\n              if (col_5[j].id === Number(event.target.id)) {\n                if (col_5[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(\n                    (i) => i !== String(col_5[j].id)\n                  );\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n          const col_6 = pattern_1[index].col_6 as any;\n          if (col_6) {\n            for (let j = 0; j < col_6.length; j++) {\n              if (col_6[j].id === Number(event.target.id)) {\n                if (col_6[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(\n                    (i) => i !== String(col_6[j].id)\n                  );\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n          const col_7 = pattern_1[index].col_7 as any;\n          if (col_7) {\n            for (let j = 0; j < col_7.length; j++) {\n              if (col_7[j].id === Number(event.target.id)) {\n                if (col_7[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(\n                    (i) => i !== String(col_7[j].id)\n                  );\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n          const col_8 = pattern_1[index].col_8 as any;\n          if (col_8) {\n            for (let j = 0; j < col_8.length; j++) {\n              if (col_8[j].id === Number(event.target.id)) {\n                if (col_8[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(\n                    (i) => i !== String(col_8[j].id)\n                  );\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n          const col_9 = pattern_1[index].col_9 as any;\n          if (col_9) {\n            for (let j = 0; j < col_9.length; j++) {\n              if (col_9[j].id === Number(event.target.id)) {\n                if (col_9[j].val !== Number(elementId.value)) {\n                  elementId.style.color = \"red\";\n                  wrongVal.push(event.target.id);\n                } else {\n                  elementId.style.color = \"\";\n                  const filterData = values.filter(\n                    (i) => i !== String(col_9[j].id)\n                  );\n                  wrongVal = filterData;\n                  checkCompletedCells();\n                  countIds();\n                }\n                return;\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  // collecting random objects for showing on UI\n  let randomObj = [] as any[];\n\n  const clearAllValues = () => {\n    for (let index = 1; index <= 81; index++) {\n      const element = document.getElementById(`${index}`) as HTMLInputElement;\n      element.value = \"\";\n      element.style.color = \"\";\n    }\n    filledIds = [];\n    newGame();\n    setIdsLength([]);\n    wrongVal = [];\n  };\n\n  const addRandomItems = (item: { id: number; val: number }) => {\n    if (randomObj.length <= 25) {\n      if (!randomObj.includes(item)) {\n        randomObj.push(item);\n      }\n    }\n  };\n\n  const newGame = () => {\n    randomObj = [];\n    for (let index = 0; index < 6; index++) {\n      if (pattern_1[0].col_1) {\n        const item =\n          pattern_1[0].col_1[\n            Math.floor(Math.random() * pattern_1[0].col_1.length)\n          ];\n        addRandomItems(item);\n      }\n      if (pattern_1[1].col_2) {\n        const item =\n          pattern_1[1].col_2[\n            Math.floor(Math.random() * pattern_1[1].col_2.length)\n          ];\n        addRandomItems(item);\n      }\n      if (pattern_1[2].col_3) {\n        const item =\n          pattern_1[2].col_3[\n            Math.floor(Math.random() * pattern_1[2].col_3.length)\n          ];\n        addRandomItems(item);\n      }\n      if (pattern_1[3].col_4) {\n        const item =\n          pattern_1[3].col_4[\n            Math.floor(Math.random() * pattern_1[3].col_4.length)\n          ];\n        addRandomItems(item);\n      }\n      if (pattern_1[4].col_5) {\n        const item =\n          pattern_1[4].col_5[\n            Math.floor(Math.random() * pattern_1[4].col_5.length)\n          ];\n        addRandomItems(item);\n      }\n      if (pattern_1[5].col_6) {\n        const item =\n          pattern_1[5].col_6[\n            Math.floor(Math.random() * pattern_1[5].col_6.length)\n          ];\n        addRandomItems(item);\n      }\n      if (pattern_1[6].col_7) {\n        const item =\n          pattern_1[6].col_7[\n            Math.floor(Math.random() * pattern_1[6].col_7.length)\n          ];\n        addRandomItems(item);\n      }\n      if (pattern_1[7].col_8) {\n        const item =\n          pattern_1[7].col_8[\n            Math.floor(Math.random() * pattern_1[7].col_8.length)\n          ];\n        addRandomItems(item);\n      }\n      if (pattern_1[8].col_7) {\n        const item =\n          pattern_1[8].col_7[\n            Math.floor(Math.random() * pattern_1[8].col_7.length)\n          ];\n        addRandomItems(item);\n      }\n    }\n    for (let index = 0; index < randomObj.length; index++) {\n      const elementId = document.getElementById(\n        `${randomObj[index].id}`\n      ) as HTMLInputElement;\n      elementId.value = randomObj[index].val;\n      if (index === 0) {\n        onClick(Number(randomObj[index].id));\n      }\n    }\n  };\n\n  useEffect(() => {\n    clearAllValues();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-restricted-globals\n    addEventListener(\n      \"keydown\",\n      function (e) {\n        if (\n          [\"Space\", \"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(\n            e.code\n          ) > -1\n        ) {\n          e.preventDefault();\n          return;\n        }\n      },\n      false\n    );\n    // eslint-disable-next-line no-restricted-globals\n    addEventListener(\"input\", (event) => {\n      checkValue(event);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-restricted-globals\n    addEventListener(\"click\", (event: any) => {\n      if (event.target.id) {\n        if (!isNaN(event.target.id)) {\n          onClick(Number(event.target.id));\n          inputId = event.target.id;\n        }\n      } else if (event.target.localName === \"button\") {\n        const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n        if (numbers.includes(Number(event.target.value))) {\n          let e = {\n            ...event,\n            target: { id: inputId },\n            value: event.target.value,\n          };\n          const elementId = document.getElementById(\n            `${inputId}`\n          ) as HTMLInputElement;\n          if (inputId) {\n            elementId.value = event.target.value;\n          }\n          inputId = \"\";\n          checkValue(e);\n        }\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const filledCells = (start: number, end: number) => {\n    let count = [];\n    for (let index = start; index <= end; index++) {\n      const element = document.getElementById(`${index}`) as HTMLInputElement;\n      if (element?.value) {\n        count.push(element.id);\n      }\n    }\n    if (count.length === 9) {\n      for (let index = 0; index < count.length; index++) {\n        if (!filledIds.includes(count[index])) {\n          setColor(count[index], \"completed\");\n          filledIds.push(count[index]);\n        }\n      }\n    }\n  };\n\n  const filledRowsAndCols = (row: any) => {\n    let count = [];\n    for (let index = 0; index < 9; index++) {\n      const element = document.getElementById(\n        `${row[index]}`\n      ) as HTMLInputElement;\n      if (element?.value) {\n        count.push(element.id);\n      }\n    }\n    if (count.length === 9) {\n      for (let index = 0; index < count.length; index++) {\n        if (!filledIds.includes(count[index])) {\n          setColor(count[index], \"completed\");\n          filledIds.push(count[index]);\n        }\n      }\n    }\n  };\n\n  const checkCompletedCells = () => {\n    filledCells(1, 9);\n    filledCells(9, 18);\n    filledCells(19, 27);\n    filledCells(28, 36);\n    filledCells(37, 45);\n    filledCells(46, 54);\n    filledCells(55, 63);\n    filledCells(64, 72);\n    filledCells(73, 81);\n    filledRowsAndCols(row_1_ids);\n    filledRowsAndCols(row_2_ids);\n    filledRowsAndCols(row_3_ids);\n    filledRowsAndCols(row_4_ids);\n    filledRowsAndCols(row_5_ids);\n    filledRowsAndCols(row_6_ids);\n    filledRowsAndCols(row_7_ids);\n    filledRowsAndCols(row_8_ids);\n    filledRowsAndCols(row_9_ids);\n    filledRowsAndCols(col_1_ids);\n    filledRowsAndCols(col_2_ids);\n    filledRowsAndCols(col_3_ids);\n    filledRowsAndCols(col_4_ids);\n    filledRowsAndCols(col_5_ids);\n    filledRowsAndCols(col_6_ids);\n    filledRowsAndCols(col_7_ids);\n    filledRowsAndCols(col_8_ids);\n    filledRowsAndCols(col_9_ids);\n  };\n\n  return (\n    <div>\n      <div className=\"heading\">\n        <h3>\n          This game is like{\" \"}\n          <a href=\"https://sudoku.com\" target=\"_blank\" rel=\"noreferrer\">\n            sudoku\n          </a>\n          , you can read more about this game{\" \"}\n          <a href=\"https://sudoku.com\" target=\"_blank\" rel=\"noreferrer\">\n            click here\n          </a>\n        </h3>\n      </div>\n      <div id=\"main-container\">\n        {idsLength.length === 91 ? (\n          <h3>Congratulations, You have completed this game.</h3>\n        ) : (\n          <>\n            <div id=\"container\"></div>\n            <div style={{ display: \"none\" }} id=\"btns\"></div>\n          </>\n        )}\n      </div>\n      <button className=\"new-game\" onClick={clearAllValues}>\n        New Game\n      </button>\n    </div>\n  );\n};\n\nexport default Sudoku;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}